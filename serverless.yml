service: tugether-service-images

plugins:
  - serverless-offline # try `sls offline start`

# Provider Settings
provider:
  name: aws
  stage: ${opt:stage, 'dev'} # check if this method of instantiating stage makes sence
  runtime: nodejs8.10
  memorySize: 256 # optional, in MB, default is 1024
  timeout: 10 # note, timeout must be longer becuase of db coldstart times
  environment:
    NODE_ENV: ${self:provider.stage}
  vpc:
    securityGroupIds:
      - sg-222f126f
    subnetIds:
      - subnet-756aef12
      - subnet-130f8f3d
  iamRoleStatements:
    ## s3 access
    -  Effect: "Allow" # s3 bucket permissions
       Action:
         - "s3:ListBucket"
         - "s3:GetObject"
         - "s3:PutObject"
         - "s3:PutObjectACL"
       Resource: "arn:aws:s3:::tugether-service-images-${self:provider.stage}-images/*" # TODO: replace with serverless param from this env's config file?
    ## paramstore access
    - Effect: 'Allow'
      Action: 'ssm:DescribeParameters'
      Resource: "*"
    - Effect: 'Allow'
      Action: 'ssm:GetParameters'
      Resource:
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'parameter/*'
    - Effect: 'Allow'
      Action: 'kms:Decrypt'
      Resource:
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:kms'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'alias/aws/ssm*'

# Define Functions
functions:
  retrieve:
    handler: dist/handlers/retrieve.handler
    events:
      - http:
          path: retrieve
          method: GET
  upload:
    handler: dist/handlers/upload.handler
    events:
      - http:
          path: upload
          method: POST
